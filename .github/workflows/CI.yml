on:
  push:
    branches:
      - main

name: CI

env:
  RUSTFLAGS: -Dwarnings

jobs:
  ci:
    name: Run CI
    strategy:
      matrix:
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt, rust-src

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Check if version is tagged
        id: get-tag
        run: |
          set +ea
          git describe --exact-match HEAD
          if [ $? -eq 0 ]; then
            echo "deploy_tag=$(git describe --exact-match HEAD)" >> $GITHUB_OUTPUT
          else
            echo "deploy_tag=FAILED" >> $GITHUB_OUTPUT
          fi

      - name: Cache Cargo Dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features

      - name: Execute Tests with Code Coverage
        run: cargo llvm-cov --all-features --workspace --codecov --output-path codecov.json

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov.json
          fail_ci_if_error: true

      - name: Clean up Codecov Artifacts
        if: steps.get-tag.outputs.deploy_tag != 'FAILED'
        run: git clean -fxd

      - name: Deploy to crates.io
        if: steps.get-tag.outputs.deploy_tag != 'FAILED'
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
